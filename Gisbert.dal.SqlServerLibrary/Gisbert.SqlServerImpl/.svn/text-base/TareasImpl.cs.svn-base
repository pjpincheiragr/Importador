
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
	public class TareasImpl	
	{
		#region Tareas methods

		public int TareasAdd(Tareas tareas)
		{
			try
			{
				int id= (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "TareasAdd",
														tareas.Descripcion, 
														tareas.Baja);

                AUD_LOGImpl.InsertarLog("Tareas", id, "INSERT");
                
                return id;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool TareasUpdate(Tareas tareas)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "TareasUpdate",
														tareas.IdTareas, 
														tareas.Descripcion, 
														tareas.Baja);

                AUD_LOGImpl.InsertarLog("Tareas", tareas.IdTareas, tareas.Baja ? "UpDEL" : "UPDATE");
                
                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool TareasDelete(int IdTareas)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "TareasDelete",
														IdTareas);
                
                AUD_LOGImpl.InsertarLog("Tareas", IdTareas, "DELETE");
                
                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public Tareas TareasGetById(int IdTareas)
		{
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "TareasGetById",
														IdTareas).Tables[0];
				Tareas NewEnt = new Tareas();

				if(dt.Rows.Count > 0)
				{
					DataRow dr = dt.Rows[0];
					NewEnt = CargarTareas(dr);
				}
				return NewEnt;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<Tareas> TareasGetAll()
		{
			List<Tareas> lstTareas = new List<Tareas>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "TareasGetAll").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						DataRow dr = dt.Rows[i];
						Tareas NewEnt = new Tareas();
						NewEnt = CargarTareas(dr);
						lstTareas.Add(NewEnt);
					}
				}
				return lstTareas;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		private Tareas CargarTareas(DataRow dr)
		{
			try
			{
				Tareas oObjeto = new Tareas();

				oObjeto.IdTareas = Int32.Parse(dr["IdTareas"].ToString());
				oObjeto.Descripcion = dr["Descripcion"].ToString();
				oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());
				
				return oObjeto;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<Tareas> TareasGetAllBaja()
		{
			List<Tareas> lstTareas = new List<Tareas>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "TareasGetAllBaja").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						Tareas NewEnt = new Tareas();
						NewEnt = CargarTareas(dt.Rows[i]);
						lstTareas.Add(NewEnt);
					}
				}
				return lstTareas;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		#endregion

	}
}

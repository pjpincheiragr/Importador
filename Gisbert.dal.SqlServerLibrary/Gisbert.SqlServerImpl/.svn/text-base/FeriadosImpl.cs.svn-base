
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
    public class FeriadosImpl
    {
        #region Feriados methods

        public int FeriadosAdd(Feriados feriados)
        {
            try
            {
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "FeriadosAdd",
                                                       feriados.Descripcion,
                                                       feriados.Fecha,
                                                       feriados.Baja);

                AUD_LOGImpl.InsertarLog("Feriados", id, "INSERT");

                return id;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool FeriadosUpdate(Feriados feriados)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "FeriadosUpdate",
                                                        feriados.IdFeriado,
                                                        feriados.Descripcion,
                                                        feriados.Fecha,
                                                        feriados.Baja);

                AUD_LOGImpl.InsertarLog("Feriados", feriados.IdFeriado, feriados.Baja ? "UpDEL" : "UPDATE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool FeriadosDelete(int IdFeriado)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "FeriadosDelete",
                                                        IdFeriado);

                AUD_LOGImpl.InsertarLog("Feriados", IdFeriado, "DELETE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public Feriados FeriadosGetById(int IdFeriado)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "FeriadosGetById",
                                                        IdFeriado).Tables[0];
                Feriados NewEnt = new Feriados();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarFeriados(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Feriados> FeriadosGetAll()
        {
            List<Feriados> lstFeriados = new List<Feriados>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "FeriadosGetAll").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        Feriados NewEnt = new Feriados();
                        NewEnt = CargarFeriados(dr);
                        lstFeriados.Add(NewEnt);
                    }
                }
                return lstFeriados;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private Feriados CargarFeriados(DataRow dr)
        {
            try
            {
                Feriados oObjeto = new Feriados();

                oObjeto.IdFeriado = Int32.Parse(dr["IdFeriado"].ToString());
                oObjeto.Descripcion = dr["Descripcion"].ToString();
                oObjeto.Fecha = DateTime.Parse(dr["Fecha"].ToString());
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Feriados> FeriadosGetAllBaja()
        {
            List<Feriados> lstFeriados = new List<Feriados>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "FeriadosGetAllBaja").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        Feriados NewEnt = new Feriados();
                        NewEnt = CargarFeriados(dt.Rows[i]);
                        lstFeriados.Add(NewEnt);
                    }
                }
                return lstFeriados;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

    }
}

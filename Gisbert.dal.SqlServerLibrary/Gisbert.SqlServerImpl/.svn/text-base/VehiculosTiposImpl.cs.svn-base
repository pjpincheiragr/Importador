
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
    public class VehiculosTiposImpl
    {
        #region VehiculosTipos methods

        public int VehiculosTiposAdd(VehiculosTipos vehiculostipos)
        {
            try
            {
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "VehiculosTiposAdd",
                                                        vehiculostipos.Descripcion,
                                                        vehiculostipos.Baja);

                AUD_LOGImpl.InsertarLog("VehiculosTipos", id, "INSERT");

                return id;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool VehiculosTiposUpdate(VehiculosTipos vehiculostipos)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "VehiculosTiposUpdate",
                                                        vehiculostipos.IdVehiculoTipo,
                                                        vehiculostipos.Descripcion,
                                                        vehiculostipos.Baja);
                AUD_LOGImpl.InsertarLog("VehiculosTipos", vehiculostipos.IdVehiculoTipo, vehiculostipos.Baja ? "UpDEL" : "UPDATE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool VehiculosTiposDelete(int idVehiculoTipo)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "VehiculosTiposDelete",
                                                        idVehiculoTipo);

                AUD_LOGImpl.InsertarLog("VehiculosTipos", idVehiculoTipo, "DELETE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public VehiculosTipos VehiculosTiposGetById(int IdVehiculoTipo)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "VehiculosTiposGetById",
                                                        IdVehiculoTipo).Tables[0];
                VehiculosTipos NewEnt = new VehiculosTipos();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarVehiculosTipos(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<VehiculosTipos> VehiculosTiposGetAll()
        {
            List<VehiculosTipos> lstVehiculosTipos = new List<VehiculosTipos>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "VehiculosTiposGetAll").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        VehiculosTipos NewEnt = new VehiculosTipos();
                        NewEnt = CargarVehiculosTipos(dr);
                        lstVehiculosTipos.Add(NewEnt);
                    }
                }
                return lstVehiculosTipos;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private VehiculosTipos CargarVehiculosTipos(DataRow dr)
        {
            try
            {
                VehiculosTipos oObjeto = new VehiculosTipos();

                oObjeto.IdVehiculoTipo = Int32.Parse(dr["IdVehiculoTipo"].ToString());
                oObjeto.Descripcion = dr["Descripcion"].ToString();
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<VehiculosTipos> VehiculosTiposGetAllBaja()
        {
            List<VehiculosTipos> lstVehiculosTipos = new List<VehiculosTipos>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "VehiculosTiposGetAllBaja").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        VehiculosTipos NewEnt = new VehiculosTipos();
                        NewEnt = CargarVehiculosTipos(dt.Rows[i]);
                        lstVehiculosTipos.Add(NewEnt);
                    }
                }
                return lstVehiculosTipos;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

    }
}

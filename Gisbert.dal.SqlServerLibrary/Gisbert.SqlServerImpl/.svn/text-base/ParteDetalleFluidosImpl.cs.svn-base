
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
	public class ParteDetalleFluidosImpl	
	{
		#region ParteDetalleFluidos methods

		public int ParteDetalleFluidosAdd(ParteDetalleFluidos partedetallefluidos)
		{
			try
			{
                 int id= (int)SqlHelper.ExecuteScalar(SqlImplHelper.getTransaction(), "ParteDetalleFluidosAdd",
														partedetallefluidos.IdParteDetalle, 
														partedetallefluidos.M3, 
														partedetallefluidos.Temperatura, 
														partedetallefluidos.IdFluido);

                 AUD_LOGImpl.InsertarLog("ParteDetalleFluidos", id, "INSERT");
                 
                return id;
            }
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool ParteDetalleFluidosUpdate(ParteDetalleFluidos partedetallefluidos)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getTransaction(), "ParteDetalleFluidosUpdate",
														partedetallefluidos.IdParteDetalleFluido, 
														partedetallefluidos.IdParteDetalle, 
														partedetallefluidos.M3, 
														partedetallefluidos.Temperatura, 
														partedetallefluidos.IdFluido);
                
                AUD_LOGImpl.InsertarLog("ParteDetalleFluidos", partedetallefluidos.IdParteDetalleFluido,
                                        "UPDATE");
                
                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool ParteDetalleFluidosDelete(int IdParteDetalleFluido)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ParteDetalleFluidosDelete",
														IdParteDetalleFluido);

                AUD_LOGImpl.InsertarLog("ParteDetalleFluidos", IdParteDetalleFluido, "DELETE");

                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

        public bool ParteDetalleFluidosDeleteByIdParteDetalle(int IdParteDetalle)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getTransaction(), "ParteDetalleFluidosDeleteByIdParteDetalle",
                                                        IdParteDetalle);
                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


		public ParteDetalleFluidos ParteDetalleFluidosGetById(int IdParteDetalleFluido)
		{
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleFluidosGetById",
														IdParteDetalleFluido).Tables[0];
				ParteDetalleFluidos NewEnt = new ParteDetalleFluidos();

				if(dt.Rows.Count > 0)
				{
					DataRow dr = dt.Rows[0];
					NewEnt = CargarParteDetalleFluidos(dr);
				}
				return NewEnt;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<ParteDetalleFluidos> ParteDetalleFluidosGetAll()
		{
			List<ParteDetalleFluidos> lstParteDetalleFluidos = new List<ParteDetalleFluidos>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleFluidosGetAll").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						DataRow dr = dt.Rows[i];
						ParteDetalleFluidos NewEnt = new ParteDetalleFluidos();
						NewEnt = CargarParteDetalleFluidos(dr);
						lstParteDetalleFluidos.Add(NewEnt);
					}
				}
				return lstParteDetalleFluidos;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

        public List<ParteDetalleFluidos> ParteDetalleFluidoGetByIdParteDetalle(int idParteDetalle)
        {
            List<ParteDetalleFluidos> lstParteDetalleFluidos = new List<ParteDetalleFluidos>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleFluidoGetByIdParteDetalle",idParteDetalle).Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        ParteDetalleFluidos NewEnt = new ParteDetalleFluidos();
                        NewEnt = CargarParteDetalleFluidos(dr);
                        lstParteDetalleFluidos.Add(NewEnt);
                    }
                }
                return lstParteDetalleFluidos;
            }
            catch (Exception ex)
            {
                throw ex;
            }

        }


        //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        private ParteDetalle CargarParteDetalle(DataRow dr)
        {
            try
            {
                ParteDetalle oObjeto = new ParteDetalle();
                ParteImpl oParteImpl = new ParteImpl();
                OperacionTipoImpl oOperacionTipoImpl = new OperacionTipoImpl();

                oObjeto.IdParteDetalle = Int32.Parse(dr["IdParteDetalle"].ToString());
                oObjeto.IdParte =(Int32.Parse(dr["IdParte"].ToString()));
                oObjeto.oIdOperacionTipo = oOperacionTipoImpl.OperacionTipoGetById(Int32.Parse(dr["IdOperacionTipo"].ToString()));
                oObjeto.PresionInicial = Int32.Parse(dr["PresionInicial"].ToString());
                oObjeto.PresionFinal = Int32.Parse(dr["PresionFinal"].ToString());
                oObjeto.PresionMaxima = Int32.Parse(dr["PresionMaxima"].ToString());
                oObjeto.HoraInicio = DateTime.Parse(dr["HoraInicio"].ToString());
                oObjeto.HoraFin = DateTime.Parse(dr["HoraFin"].ToString());
                oObjeto.HoraInicioDisp = DateTime.Parse(dr["HoraInicioDisp"].ToString());
                oObjeto.HoraFinDisp = DateTime.Parse(dr["HoraFinDisp"].ToString());
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        public ParteDetalle ParteDetalleGetLast()
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleGetLast").Tables[0];
                ParteDetalle NewEnt = new ParteDetalle();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarParteDetalle(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public Fluidos FluidoGetLast()
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "FluidoGetLast").Tables[0];
                Fluidos NewEnt = new Fluidos();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarFluidos(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private Fluidos CargarFluidos(DataRow dr)
        {
            try
            {
                Fluidos oObjeto = new Fluidos();

                oObjeto.IdFluido = Int32.Parse(dr["IdFluido"].ToString());
                oObjeto.Descripcion = dr["Descripcion"].ToString();
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


		private ParteDetalleFluidos CargarParteDetalleFluidos(DataRow dr)
		{
			try
			{
				ParteDetalleFluidos oObjeto = new ParteDetalleFluidos();
                ParteDetalleImpl oParteDetalleImpl = new ParteDetalleImpl();

				oObjeto.IdParteDetalleFluido = Int32.Parse(dr["IdParteDetalleFluido"].ToString());
				oObjeto.IdParteDetalle = ((Int32.Parse(dr["IdParteDetalle"].ToString())));
				oObjeto.M3 = Decimal.Parse(dr["M3"].ToString());
				oObjeto.Temperatura = Decimal.Parse(dr["Temperatura"].ToString());
				oObjeto.IdFluido = (Int32.Parse(dr["IdFluido"].ToString()));
				
				return oObjeto;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		#endregion

	}
}

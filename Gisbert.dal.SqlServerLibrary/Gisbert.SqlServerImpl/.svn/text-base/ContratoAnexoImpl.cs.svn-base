
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
    public class ContratoAnexoImpl
    {
        #region ContratoAnexo methods

        public int ContratoAnexoAdd(ContratoAnexo contratoanexo)
        {
            try
            {
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "ContratoAnexoAdd",
                                                        contratoanexo.NroAnexo,
                                                        contratoanexo.IdContrato,
                                                        contratoanexo.FechaInicio,
                                                        contratoanexo.FechaFin,
                                                        contratoanexo.Baja);

                AUD_LOGImpl.InsertarLog("ContratoAnexo", id, "INSERT");

                return id;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }



        public bool ContratoAnexoUpdate(ContratoAnexo contratoanexo)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ContratoAnexoUpdate",
                                                        contratoanexo.IdAnexo,
                                                        contratoanexo.NroAnexo,
                                                        contratoanexo.IdContrato,
                                                        contratoanexo.FechaInicio,
                                                        contratoanexo.FechaFin,
                                                        contratoanexo.Baja);

                AUD_LOGImpl.InsertarLog("ContratoAnexo", contratoanexo.IdAnexo,
                                        contratoanexo.Baja ? "UpDEL" : "UPDATE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool ContratoAnexoDelete(int IdAnexo)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ContratoAnexoDelete",
                                                        IdAnexo);

                AUD_LOGImpl.InsertarLog("ContratoAnexo", IdAnexo, "DELETE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public ContratoAnexo ContratoAnexoGetById(int IdAnexo)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoGetById",
                                                        IdAnexo).Tables[0];
                ContratoAnexo NewEnt = new ContratoAnexo();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarContratoAnexo(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }



        public ContratoAnexo ContratoAnexoGetByIdContratoNroAnexo(int idContrato, int nroAnexo)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoGetByIdContratoNroAnexo",
                                                        idContrato, nroAnexo).Tables[0];
                ContratoAnexo NewEnt = new ContratoAnexo();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarContratoAnexo(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public ContratoAnexo ContratoAnexoGetByIdContratoUltimo(int IdContrato)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoGetByIdContratoUltimo",
                                                        IdContrato).Tables[0];
                ContratoAnexo NewEnt = new ContratoAnexo();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarContratoAnexo(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<ContratoAnexo> ContratoAnexoGetByIdContrato(int idContrato)
        {
            List<ContratoAnexo> lstContratoAnexo = new List<ContratoAnexo>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoGetByIdContrato", idContrato).Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        ContratoAnexo NewEnt = new ContratoAnexo();
                        NewEnt = CargarContratoAnexo(dr);
                        lstContratoAnexo.Add(NewEnt);
                    }
                }
                return lstContratoAnexo;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<ContratoAnexo> ContratoAnexoGetByContrato(int idContrato)
        {
            List<ContratoAnexo> lstContratoAnexo = new List<ContratoAnexo>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoGetByContrato", idContrato).Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        ContratoAnexo NewEnt = new ContratoAnexo();
                        NewEnt = CargarContratoAnexo(dr);
                        lstContratoAnexo.Add(NewEnt);
                    }
                }
                return lstContratoAnexo;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
		public List<ContratoAnexo> ContratoAnexoGetAll()
		{
			List<ContratoAnexo> lstContratoAnexo = new List<ContratoAnexo>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoGetAll").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						DataRow dr = dt.Rows[i];
						ContratoAnexo NewEnt = new ContratoAnexo();
						NewEnt = CargarContratoAnexo(dr);
						lstContratoAnexo.Add(NewEnt);
					}
				}
				return lstContratoAnexo;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

        private ContratoAnexo CargarContratoAnexo(DataRow dr)
        {
            try
            {
                ContratoAnexo oObjeto = new ContratoAnexo();

                oObjeto.IdAnexo = Int32.Parse(dr["IdAnexo"].ToString());
                oObjeto.NroAnexo = Int32.Parse(dr["NroAnexo"].ToString());
                oObjeto.IdContrato = Int32.Parse(dr["IdContrato"].ToString());
                oObjeto.FechaInicio = DateTime.Parse(dr["FechaInicio"].ToString());
                oObjeto.FechaFin = DateTime.Parse(dr["FechaFin"].ToString());
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<ContratoAnexo> ContratoAnexoGetAllBaja()
        {
            List<ContratoAnexo> lstContratoAnexo = new List<ContratoAnexo>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoGetAllBaja").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        ContratoAnexo NewEnt = new ContratoAnexo();
                        NewEnt = CargarContratoAnexo(dt.Rows[i]);
                        lstContratoAnexo.Add(NewEnt);
                    }
                }
                return lstContratoAnexo;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

    }
}

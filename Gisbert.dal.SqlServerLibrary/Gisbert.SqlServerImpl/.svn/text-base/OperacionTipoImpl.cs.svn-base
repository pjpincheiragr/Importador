
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
	public class OperacionTipoImpl	
	{
		#region OperacionTipo methods

		public int OperacionTipoAdd(OperacionTipo operaciontipo)
		{
			try
			{
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "OperacionTipoAdd",
														operaciontipo.Descripcion, 
														operaciontipo.Baja);

                AUD_LOGImpl.InsertarLog("OperacionTipo", id, "INSERT");
                
                return id; 
            }
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool OperacionTipoUpdate(OperacionTipo operaciontipo)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "OperacionTipoUpdate",
														operaciontipo.IdOperacionTipo, 
														operaciontipo.Descripcion, 
														operaciontipo.Baja);

                AUD_LOGImpl.InsertarLog("OperacionTipo", operaciontipo.IdOperacionTipo, 
                                        operaciontipo.Baja ? "UpDEL" : "UPDATE");
                                
                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool OperacionTipoDelete(int IdOperacionTipo)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "OperacionTipoDelete",
														IdOperacionTipo);

                AUD_LOGImpl.InsertarLog("OperacionTipo", IdOperacionTipo, "DELETE");

                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public OperacionTipo OperacionTipoGetById(int IdOperacionTipo)
		{
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "OperacionTipoGetById",
														IdOperacionTipo).Tables[0];
				OperacionTipo NewEnt = new OperacionTipo();

				if(dt.Rows.Count > 0)
				{
					DataRow dr = dt.Rows[0];
					NewEnt = CargarOperacionTipo(dr);
				}
				return NewEnt;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<OperacionTipo> OperacionTipoGetAll()
		{
			List<OperacionTipo> lstOperacionTipo = new List<OperacionTipo>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "OperacionTipoGetAll").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						DataRow dr = dt.Rows[i];
						OperacionTipo NewEnt = new OperacionTipo();
						NewEnt = CargarOperacionTipo(dr);
						lstOperacionTipo.Add(NewEnt);
					}
				}
				return lstOperacionTipo;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		private OperacionTipo CargarOperacionTipo(DataRow dr)
		{
			try
			{
				OperacionTipo oObjeto = new OperacionTipo();

				oObjeto.IdOperacionTipo = Int32.Parse(dr["IdOperacionTipo"].ToString());
				oObjeto.Descripcion = dr["Descripcion"].ToString();
				oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());
				
				return oObjeto;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<OperacionTipo> OperacionTipoGetAllBaja()
		{
			List<OperacionTipo> lstOperacionTipo = new List<OperacionTipo>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "OperacionTipoGetAllBaja").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						OperacionTipo NewEnt = new OperacionTipo();
						NewEnt = CargarOperacionTipo(dt.Rows[i]);
						lstOperacionTipo.Add(NewEnt);
					}
				}
				return lstOperacionTipo;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		#endregion

	}
}

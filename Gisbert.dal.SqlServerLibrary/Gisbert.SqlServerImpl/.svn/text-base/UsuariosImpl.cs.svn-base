
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
	public class UsuariosImpl	
	{
		#region Usuarios methods

		public int UsuariosAdd(Usuarios usuarios)
		{
			try
			{
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "UsuariosAdd",
														usuarios.Username, 
														usuarios.Password, 
														usuarios.Baja, 
														usuarios.oPersonal.IdPersonal);
                
                AUD_LOGImpl.InsertarLog("Usuarios", id, "INSERT");
                
                return id; 
            }
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool UsuariosUpdate(Usuarios usuarios)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "UsuariosUpdate",
														usuarios.IdUsuario, 
														usuarios.Username, 
														usuarios.Password, 
														usuarios.Baja, 
														usuarios.oPersonal.IdPersonal);
                
                AUD_LOGImpl.InsertarLog("Usuarios", usuarios.IdUsuario, usuarios.Baja ? "UpDEL" : "UPDATE");
                
                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool UsuariosDelete(int IdUsuario)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "UsuariosDelete",
														IdUsuario);
                
                AUD_LOGImpl.InsertarLog("Usuarios", IdUsuario, "DELETE");

                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public Usuarios UsuariosGetById(int IdUsuario)
		{
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "UsuariosGetById",
														IdUsuario).Tables[0];
				Usuarios NewEnt = new Usuarios();

				if(dt.Rows.Count > 0)
				{
					DataRow dr = dt.Rows[0];
					NewEnt = CargarUsuarios(dr);
				}
				return NewEnt;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<Usuarios> UsuariosGetAll()
		{
			List<Usuarios> lstUsuarios = new List<Usuarios>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "UsuariosGetAll").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						DataRow dr = dt.Rows[i];
						Usuarios NewEnt = new Usuarios();
						NewEnt = CargarUsuarios(dr);
						lstUsuarios.Add(NewEnt);
					}
				}
				return lstUsuarios;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		private Usuarios CargarUsuarios(DataRow dr)
		{
			try
			{
				Usuarios oObjeto = new Usuarios();
                PersonalImpl PersonalImpl = new PersonalImpl();

				oObjeto.IdUsuario = int.Parse(dr["IdUsuario"].ToString());
				oObjeto.Username = dr["Username"].ToString();
				oObjeto.Password = dr["Password"].ToString();
				oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());
				oObjeto.oPersonal = PersonalImpl.PersonalGetById(int.Parse(dr["IdPersonal"].ToString()));
				
				return oObjeto;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<Usuarios> UsuariosGetAllBaja()
		{
			List<Usuarios> lstUsuarios = new List<Usuarios>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "UsuariosGetAllBaja").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						Usuarios NewEnt = new Usuarios();
						NewEnt = CargarUsuarios(dt.Rows[i]);
						lstUsuarios.Add(NewEnt);
					}
				}
				return lstUsuarios;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}


   public Usuarios UsuariosGetByUsuario(string Usuario)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "UsuariosGetByUsuario",
                                                        Usuario).Tables[0];
                Usuarios NewEnt = new Usuarios();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarUsuarios(dr);
                }
                return NewEnt;
                }
			catch(Exception ex)
			{
				throw ex;
			}
		}
      
		#endregion

	}
}

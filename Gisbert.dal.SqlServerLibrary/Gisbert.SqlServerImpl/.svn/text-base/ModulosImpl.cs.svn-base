
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
	public class ModulosImpl	
	{
		#region Modulos methods

		public int ModulosAdd(Modulos modulos)
		{
			try
			{
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "ModulosAdd",
														modulos.Descripcion, 
														modulos.Baja);

                AUD_LOGImpl.InsertarLog("Modulos", id, "INSERT");
                
                return id; 
            }
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool ModulosUpdate(Modulos modulos)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ModulosUpdate",
														modulos.IdModulo, 
														modulos.Descripcion, 
														modulos.Baja);

                AUD_LOGImpl.InsertarLog("Modulos", modulos.IdModulo, modulos.Baja ? "UpDEL" : "UPDATE");
                
                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool ModulosDelete(int IdModulo)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ModulosDelete",
														IdModulo);

                AUD_LOGImpl.InsertarLog("Modulos", IdModulo, "DELETE");

                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public Modulos ModulosGetById(int IdModulo)
		{
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ModulosGetById",
														IdModulo).Tables[0];
				Modulos NewEnt = new Modulos();

				if(dt.Rows.Count > 0)
				{
					DataRow dr = dt.Rows[0];
					NewEnt = CargarModulos(dr);
				}
				return NewEnt;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<Modulos> ModulosGetAll()
		{
			List<Modulos> lstModulos = new List<Modulos>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ModulosGetAll").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						DataRow dr = dt.Rows[i];
						Modulos NewEnt = new Modulos();
						NewEnt = CargarModulos(dr);
						lstModulos.Add(NewEnt);
					}
				}
				return lstModulos;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		private Modulos CargarModulos(DataRow dr)
		{
			try
			{
				Modulos oObjeto = new Modulos();

				oObjeto.IdModulo = Int32.Parse(dr["IdModulo"].ToString());
				oObjeto.Descripcion = dr["Descripcion"].ToString();
				oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());
				
				return oObjeto;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public List<Modulos> ModulosGetAllBaja()
		{
			List<Modulos> lstModulos = new List<Modulos>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ModulosGetAllBaja").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						Modulos NewEnt = new Modulos();
						NewEnt = CargarModulos(dt.Rows[i]);
						lstModulos.Add(NewEnt);
					}
				}
				return lstModulos;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		#endregion

	}
}

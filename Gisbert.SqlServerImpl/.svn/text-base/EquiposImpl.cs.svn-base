
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
    public class EquiposImpl
    {
        #region Equipos methods

        public int EquiposAdd(Equipos equipos)
        {
            try
            {
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "EquiposAdd",
                                                       equipos.Descripcion,
                                                       equipos.Baja);

                AUD_LOGImpl.InsertarLog("Equipos", id, "INSERT");

                return id;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool EquiposUpdate(Equipos equipos)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "EquiposUpdate",
                                                        equipos.IdEquipo,
                                                        equipos.Descripcion,
                                                        equipos.Baja);

                AUD_LOGImpl.InsertarLog("Equipos", equipos.IdEquipo, equipos.Baja ? "UpDEL" : "UPDATE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool EquiposDelete(int IdEquipo)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "EquiposDelete",
                                                        IdEquipo);

                AUD_LOGImpl.InsertarLog("Equipos", IdEquipo, "DELETE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public Equipos EquiposGetById(int IdEquipo)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "EquiposGetById",
                                                        IdEquipo).Tables[0];
                Equipos NewEnt = new Equipos();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarEquipos(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Equipos> EquiposGetAll()
        {
            List<Equipos> lstEquipos = new List<Equipos>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "EquiposGetAll").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        Equipos NewEnt = new Equipos();
                        NewEnt = CargarEquipos(dr);
                        lstEquipos.Add(NewEnt);
                    }
                }
                return lstEquipos;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private Equipos CargarEquipos(DataRow dr)
        {
            try
            {
                Equipos oObjeto = new Equipos();

                oObjeto.IdEquipo = Int32.Parse(dr["IdEquipo"].ToString());
                oObjeto.Descripcion = dr["Descripcion"].ToString();
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Equipos> EquiposGetAllBaja()
        {
            List<Equipos> lstEquipos = new List<Equipos>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "EquiposGetAllBaja").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        Equipos NewEnt = new Equipos();
                        NewEnt = CargarEquipos(dt.Rows[i]);
                        lstEquipos.Add(NewEnt);
                    }
                }
                return lstEquipos;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

    }
}

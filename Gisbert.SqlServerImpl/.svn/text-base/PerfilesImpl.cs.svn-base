
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
    public class PerfilesImpl
    {
        #region Perfiles methods

        public int PerfilesAdd(Perfiles perfiles)
        {
            try
            {
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "PerfilesAdd",
                                          perfiles.Descripcion,
                                          perfiles.Baja);


                AUD_LOGImpl.InsertarLog("Perfiles", id, "INSERT");

                return id;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool PerfilesUpdate(Perfiles perfiles)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "PerfilesUpdate",
                                                        perfiles.IdPerfil,
                                                        perfiles.Descripcion,
                                                        perfiles.Baja);

                AUD_LOGImpl.InsertarLog("Perfiles", perfiles.IdPerfil, perfiles.Baja ? "UpDEL" : "UPDATE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool PerfilesDelete(int IdPerfil)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "PerfilesDelete",
                                                        IdPerfil);
                AUD_LOGImpl.InsertarLog("Perfiles", IdPerfil, "DELETE");
                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public Perfiles PerfilesGetById(int IdPerfil)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "PerfilesGetById",
                                                        IdPerfil).Tables[0];
                Perfiles NewEnt = new Perfiles();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarPerfiles(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Perfiles> PerfilesGetAll()
        {
            List<Perfiles> lstPerfiles = new List<Perfiles>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "PerfilesGetAll").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        Perfiles NewEnt = new Perfiles();
                        NewEnt = CargarPerfiles(dr);
                        lstPerfiles.Add(NewEnt);
                    }
                }
                return lstPerfiles;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private Perfiles CargarPerfiles(DataRow dr)
        {
            try
            {
                Perfiles oObjeto = new Perfiles();

                oObjeto.IdPerfil = Int32.Parse(dr["IdPerfil"].ToString());
                oObjeto.Descripcion = dr["Descripcion"].ToString();
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Perfiles> PerfilesGetAllBaja()
        {
            List<Perfiles> lstPerfiles = new List<Perfiles>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "PerfilesGetAllBaja").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        Perfiles NewEnt = new Perfiles();
                        NewEnt = CargarPerfiles(dt.Rows[i]);
                        lstPerfiles.Add(NewEnt);
                    }
                }
                return lstPerfiles;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

    }
}

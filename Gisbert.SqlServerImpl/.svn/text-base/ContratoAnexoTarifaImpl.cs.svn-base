///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
    public class ContratoAnexoTarifaImpl
    {
        #region ContratoAnexoTarifa methods

        public int ContratoAnexoTarifaAdd(ContratoAnexoTarifa contratoanexotarifa)
        {
            try
            {
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaAdd",
                                                       contratoanexotarifa.IdAnexo,
                                                       contratoanexotarifa.Item,
                                                       contratoanexotarifa.Descripcion,
                                                       contratoanexotarifa.Dia,
                                                       contratoanexotarifa.HoraInicio,
                                                       contratoanexotarifa.HoraFin,
                                                       contratoanexotarifa.IdUnidad,
                                                       contratoanexotarifa.Valor,
                                                       contratoanexotarifa.Baja);

                AUD_LOGImpl.InsertarLog("ContratoAnexoTarifa", id, "INSERT");

                return id;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool ContratoAnexoTarifaUpdate(ContratoAnexoTarifa contratoanexotarifa)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaUpdate",
                                                        contratoanexotarifa.IdAnexoTarifa,
                                                        contratoanexotarifa.IdAnexo,
                                                        contratoanexotarifa.Item,
                                                        contratoanexotarifa.Descripcion,
                                                        contratoanexotarifa.Dia,
                                                        contratoanexotarifa.HoraInicio,
                                                        contratoanexotarifa.HoraFin,
                                                        contratoanexotarifa.IdUnidad,
                                                        contratoanexotarifa.Valor,
                                                        contratoanexotarifa.Baja);

                AUD_LOGImpl.InsertarLog("ContratoAnexoTarifa", contratoanexotarifa.IdAnexoTarifa,
                       contratoanexotarifa.Baja ? "UpDEL" : "UPDATE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool ContratoAnexoTarifaDelete(int IdAnexoTarifa)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaDelete",
                                                        IdAnexoTarifa);

                AUD_LOGImpl.InsertarLog("ContratoAnexoTarifa", IdAnexoTarifa, "DELETE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }




        public ContratoAnexoTarifa ContratoAnexoTarifaGetById(int IdAnexoTarifa)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaGetById",
                                                        IdAnexoTarifa).Tables[0];
                ContratoAnexoTarifa NewEnt = new ContratoAnexoTarifa();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarContratoAnexoTarifa(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }



        public List<ContratoAnexoTarifa> ContratoAnexoTarifaGetByItem(string item, int idAnexo)
        {
            List<ContratoAnexoTarifa> lstContratoAnexoTarifa = new List<ContratoAnexoTarifa>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(),
                                                        "ContratoAnexoTarifaGetByItem", item, 
                                                        idAnexo).Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        ContratoAnexoTarifa NewEnt = new ContratoAnexoTarifa();
                        NewEnt = CargarContratoAnexoTarifa(dr);
                        lstContratoAnexoTarifa.Add(NewEnt);
                    }
                }
                return lstContratoAnexoTarifa;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }




        public List<ContratoAnexoTarifa> ContratoAnexoTarifaGetAll()
        {
            List<ContratoAnexoTarifa> lstContratoAnexoTarifa = new List<ContratoAnexoTarifa>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaGetAll").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        ContratoAnexoTarifa NewEnt = new ContratoAnexoTarifa();
                        NewEnt = CargarContratoAnexoTarifa(dr);
                        lstContratoAnexoTarifa.Add(NewEnt);
                    }
                }
                return lstContratoAnexoTarifa;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private ContratoAnexoTarifa CargarContratoAnexoTarifa(DataRow dr)
        {
            try
            {
                ContratoAnexoTarifa oObjeto = new ContratoAnexoTarifa();

                oObjeto.IdAnexoTarifa = Int32.Parse(dr["IdAnexoTarifa"].ToString());
                oObjeto.IdAnexo = Int32.Parse(dr["IdAnexo"].ToString());
                oObjeto.Item = dr["Item"].ToString();
                oObjeto.Descripcion = dr["Descripcion"].ToString();
                oObjeto.Dia = Int32.Parse(dr["Dia"].ToString());
                oObjeto.HoraInicio = DateTime.Parse(dr["HoraInicio"].ToString());
                oObjeto.HoraFin = DateTime.Parse(dr["HoraFin"].ToString());
                oObjeto.IdUnidad = Int32.Parse(dr["IdUnidad"].ToString());
                oObjeto.Valor = Decimal.Parse(dr["Valor"].ToString());
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<ContratoAnexoTarifa> ContratoAnexoTarifaGetAllBaja()
        {
            List<ContratoAnexoTarifa> lstContratoAnexoTarifa = new List<ContratoAnexoTarifa>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaGetAllBaja").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        ContratoAnexoTarifa NewEnt = new ContratoAnexoTarifa();
                        NewEnt = CargarContratoAnexoTarifa(dt.Rows[i]);
                        lstContratoAnexoTarifa.Add(NewEnt);
                    }
                }
                return lstContratoAnexoTarifa;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public DataTable ContratoAnexoTarifaGetByIdAnexo(int idAnexo)
        {
            try
            {
                DataTable DTContratoAnexoTarifa;
                DataSet DSContratoAnexoTarifa = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaGetByIdAnexo", idAnexo);
                DTContratoAnexoTarifa = DSContratoAnexoTarifa.Tables[0];
                DSContratoAnexoTarifa.Tables.RemoveAt(0);
                return DTContratoAnexoTarifa;
            }
            catch (Exception)
            {
                return null;
            }
        }

        public bool ContratoAnexoTarifaDeleteByItem(String Item, int idAnexo)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ContratoAnexoTarifaDeleteByItem", Item, idAnexo);
                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        #endregion

    }
}
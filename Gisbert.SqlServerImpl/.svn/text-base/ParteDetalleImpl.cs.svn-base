
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
	public class ParteDetalleImpl	
	{

		#region ParteDetalle methods

		public int ParteDetalleAdd(ParteDetalle partedetalle)
		{
			try
			{
				int idParteDetalle= (int)SqlHelper.ExecuteScalar(SqlImplHelper.getTransaction(), "ParteDetalleAdd",
														partedetalle.IdParte, 
														partedetalle.oIdOperacionTipo.IdOperacionTipo, 
														partedetalle.PresionInicial, 
														partedetalle.PresionFinal, 
														partedetalle.PresionMaxima, 
														partedetalle.HoraInicio.ToShortTimeString(), 
														partedetalle.HoraFin.ToShortTimeString(), 
														partedetalle.HoraInicioDisp, 
														partedetalle.HoraFinDisp, 
														partedetalle.Baja);

                AUD_LOGImpl.InsertarLog("Partedetalle", idParteDetalle, "INSERT");
               
                return idParteDetalle;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public bool ParteDetalleUpdate(ParteDetalle partedetalle)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getTransaction(), "ParteDetalleUpdate",
														partedetalle.IdParteDetalle, 
														partedetalle.IdParte, 
														partedetalle.oIdOperacionTipo.IdOperacionTipo, 
														partedetalle.PresionInicial, 
														partedetalle.PresionFinal, 
														partedetalle.PresionMaxima, 
														partedetalle.HoraInicio, 
														partedetalle.HoraFin, 
														partedetalle.HoraInicioDisp, 
														partedetalle.HoraFinDisp, 
														partedetalle.Baja);
                
                AUD_LOGImpl.InsertarLog("Partedetalle", partedetalle.IdParteDetalle, 
                                        partedetalle.Baja ? "UpDEL" : "UPDATE");
                
                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

      

		public bool ParteDetalleDelete(int IdParteDetalle)
		{
			try
			{
				int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "ParteDetalleDelete",
														IdParteDetalle);
                AUD_LOGImpl.InsertarLog("Partedetalle", IdParteDetalle, "DELETE");

                if (update > 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		public ParteDetalle ParteDetalleGetById(int IdParteDetalle)
		{
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleGetById",
														IdParteDetalle).Tables[0];
				ParteDetalle NewEnt = new ParteDetalle();

				if(dt.Rows.Count > 0)
				{
					DataRow dr = dt.Rows[0];
					NewEnt = CargarParteDetalle(dr);
				}
				return NewEnt;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

        public List<ParteDetalle> ParteDetalleGetByIdParte(int IdParte)
        {
            List<ParteDetalle> lstParteDetalle = new List<ParteDetalle>();
            try
            {
            
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleGetByIdParte",
                                                        IdParte).Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        ParteDetalle NewEnt = new ParteDetalle();
                        NewEnt = CargarParteDetalle(dr);
                        lstParteDetalle.Add(NewEnt);
                    }
                } return lstParteDetalle;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        public Partes ParteGetLast()
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteGetLast").Tables[0];
                Partes NewEnt = new Partes();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarParte(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }




		public List<ParteDetalle> ParteDetalleGetAll()
		{
			List<ParteDetalle> lstParteDetalle = new List<ParteDetalle>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleGetAll").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						DataRow dr = dt.Rows[i];
						ParteDetalle NewEnt = new ParteDetalle();
						NewEnt = CargarParteDetalle(dr);
						lstParteDetalle.Add(NewEnt);
					}
				}
                
				return lstParteDetalle;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}


		private ParteDetalle CargarParteDetalle(DataRow dr)
		{
			try
			{
				ParteDetalle oObjeto = new ParteDetalle();
                ParteImpl oParteImpl = new ParteImpl();
                OperacionTipoImpl oOperacionTipoImpl = new OperacionTipoImpl();

				oObjeto.IdParteDetalle = Int32.Parse(dr["IdParteDetalle"].ToString());
				oObjeto.IdParte =Int32.Parse(dr["IdParte"].ToString());
				oObjeto.oIdOperacionTipo =oOperacionTipoImpl.OperacionTipoGetById(Int32.Parse(dr["IdOperacionTipo"].ToString()));
				oObjeto.PresionInicial = Int32.Parse(dr["PresionInicial"].ToString());
				oObjeto.PresionFinal = Int32.Parse(dr["PresionFinal"].ToString());
				oObjeto.PresionMaxima = Int32.Parse(dr["PresionMaxima"].ToString());
				oObjeto.HoraInicio = DateTime.Parse(dr["HoraInicio"].ToString());
				oObjeto.HoraFin = DateTime.Parse(dr["HoraFin"].ToString());
				oObjeto.HoraInicioDisp = DateTime.Parse(dr["HoraInicioDisp"].ToString());
				oObjeto.HoraFinDisp = DateTime.Parse(dr["HoraFinDisp"].ToString());
				oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());
				
				return oObjeto;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}


        //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
        private Partes CargarParte(DataRow dr)
		{
			try
			{
				Partes oObjeto = new Partes();
                ClientesImpl oClientesImpl = new ClientesImpl();
                AreasImpl oAreaImpl = new AreasImpl();
                YacimientosImpl oYacimientosImpl = new YacimientosImpl();
                TareasImpl oTareasImpl = new TareasImpl();
                EquiposImpl oEquiposImpl = new EquiposImpl();


				oObjeto.IdParte = Int32.Parse(dr["IdParte"].ToString());
				oObjeto.Fecha = DateTime.Parse(dr["Fecha"].ToString());
				oObjeto.Numero = Int32.Parse(dr["Numero"].ToString());
                oObjeto.IdEquipo = (Int32.Parse(dr["IdEquipo"].ToString()));
				oObjeto.IdPickUp = (Int32.Parse(dr["IdPickUp"].ToString()));
				oObjeto.IdVehiculoCL = (Int32.Parse(dr["IdVehiculoCL"].ToString()));
				oObjeto.oIdCliente = oClientesImpl.ClientesGetById(Int32.Parse(dr["IdCliente"].ToString()));
				oObjeto.oIdArea = oAreaImpl.AreasGetById(Int32.Parse(dr["IdArea"].ToString()));
				oObjeto.oIdYacimiento = oYacimientosImpl.YacimientosGetById(Int32.Parse(dr["IdYacimiento"].ToString()));
				oObjeto.Pozo = dr["Pozo"].ToString();
				oObjeto.Bateria = dr["Bateria"].ToString();
				oObjeto.IdOperador = (dr["IdOperador"].ToString());
				oObjeto.IdAyudante = (dr["IdAyudante"].ToString());
				oObjeto.IdChoferCL = (dr["IdChoferCL"].ToString());
				oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());
				oObjeto.HoraInicio = DateTime.Parse(dr["HoraInicio"].ToString());
				oObjeto.HoraFin = DateTime.Parse(dr["HoraFin"].ToString());
				oObjeto.IdTareas = (dr["IdTareas"].ToString());
				oObjeto.KmEquipoAdic = Int32.Parse(dr["KmEquipoAdic"].ToString());
				oObjeto.Automatico = Boolean.Parse(dr["Automatico"].ToString());
				oObjeto.Inspector = dr["Inspector"].ToString();
				oObjeto.Observaciones = dr["Observaciones"].ToString();
				oObjeto.Zona = dr["Zona"].ToString();
				
				return oObjeto;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}


		public List<ParteDetalle> ParteDetalleGetAllBaja()
		{
			List<ParteDetalle> lstParteDetalle = new List<ParteDetalle>();
			try
			{
				DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "ParteDetalleGetAllBaja").Tables[0];
				if (dt.Rows.Count > 0)
				{
					for (int i = 0; dt.Rows.Count > i; i++)
					{
						ParteDetalle NewEnt = new ParteDetalle();
						NewEnt = CargarParteDetalle(dt.Rows[i]);
						lstParteDetalle.Add(NewEnt);
					}
				}
				return lstParteDetalle;
			}
			catch(Exception ex)
			{
				throw ex;
			}
		}

		#endregion

	}
}

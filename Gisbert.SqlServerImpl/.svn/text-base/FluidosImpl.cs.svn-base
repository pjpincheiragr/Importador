
///////////////////////////////////////////////////////////////////////////
//
// Generated by MyGeneration Version # (1.3.0.9) 
// 
// Template Creado por:
//
// eXimo - Consultora en Sistemas
//
///////////////////////////////////////////////////////////////////////////

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using Eximo.dal.SqlServerLibrary;
using Rodial.Model;

namespace Rodial.SqlServerImpl
{
    public class FluidosImpl
    {
        #region Fluidos methods

        public int FluidosAdd(Fluidos fluidos)
        {
            try
            {
                int id = (int)SqlHelper.ExecuteScalar(SqlImplHelper.getConnectionString(), "FluidosAdd",
                                                        fluidos.Descripcion,
                                                        fluidos.Baja);

                AUD_LOGImpl.InsertarLog("Fluidos", id, "INSERT");

                return id;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool FluidosUpdate(Fluidos fluidos)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "FluidosUpdate",
                                                        fluidos.IdFluido,
                                                        fluidos.Descripcion,
                                                        fluidos.Baja);

                AUD_LOGImpl.InsertarLog("Fluidos", fluidos.IdFluido, fluidos.Baja ? "UpDEL" : "UPDATE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public bool FluidosDelete(int IdFluido)
        {
            try
            {
                int update = SqlHelper.ExecuteNonQuery(SqlImplHelper.getConnectionString(), "FluidosDelete",
                                                        IdFluido);

                AUD_LOGImpl.InsertarLog("Fluidos", IdFluido, "DELETE");

                if (update > 0)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public Fluidos FluidosGetById(int IdFluido)
        {
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "FluidosGetById",
                                                        IdFluido).Tables[0];
                Fluidos NewEnt = new Fluidos();

                if (dt.Rows.Count > 0)
                {
                    DataRow dr = dt.Rows[0];
                    NewEnt = CargarFluidos(dr);
                }
                return NewEnt;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Fluidos> FluidosGetAll()
        {
            List<Fluidos> lstFluidos = new List<Fluidos>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "FluidosGetAll").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        DataRow dr = dt.Rows[i];
                        Fluidos NewEnt = new Fluidos();
                        NewEnt = CargarFluidos(dr);
                        lstFluidos.Add(NewEnt);
                    }
                }
                return lstFluidos;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        private Fluidos CargarFluidos(DataRow dr)
        {
            try
            {
                Fluidos oObjeto = new Fluidos();

                oObjeto.IdFluido = Int32.Parse(dr["IdFluido"].ToString());
                oObjeto.Descripcion = dr["Descripcion"].ToString();
                oObjeto.Baja = Boolean.Parse(dr["Baja"].ToString());

                return oObjeto;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public List<Fluidos> FluidosGetAllBaja()
        {
            List<Fluidos> lstFluidos = new List<Fluidos>();
            try
            {
                DataTable dt = SqlHelper.ExecuteDataset(SqlImplHelper.getConnectionString(), "FluidosGetAllBaja").Tables[0];
                if (dt.Rows.Count > 0)
                {
                    for (int i = 0; dt.Rows.Count > i; i++)
                    {
                        Fluidos NewEnt = new Fluidos();
                        NewEnt = CargarFluidos(dt.Rows[i]);
                        lstFluidos.Add(NewEnt);
                    }
                }
                return lstFluidos;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        #endregion

    }
}
